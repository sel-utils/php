<?php

/*
 * This file was automatically generated by sel-utils and
 * released under the MIT License.
 * 
 * License: https://github.com/sel-project/sel-utils/blob/master/LICENSE
 * Repository: https://github.com/sel-project/sel-utils
 * Generated from https://github.com/sel-project/sel-utils/blob/master/xml/protocol/hncom2.xml
 */
namespace sul\protocol\world\hncom;

use utils\Packet;

class Add extends Packet
{

    public const ID = 31;

    public const CLIENTBOUND = false;
    public const SERVERBOUND = true;

    // dimension
    public const OVERWORLD = 0;
    public const NETHER = 1;
    public const END = 2;

    // generator
    public const DEFAULT = 0;
    public const FLAT = 1;

    // difficulty
    public const PEACEFUL = 0;
    public const EASY = 1;
    public const NORMAL = 2;
    public const HARD = 3;
    public const HARDCORE = 4;

    // gamemode
    public const SURVIVAL = 0;
    public const CREATIVE = 1;
    public const ADVENTURE = 2;
    public const SPECTATOR = 3;

    public $worldId;
    public $name;
    public $dimension;
    public $generator;
    public $difficulty;
    public $gamemode;
    public $spawnPoint;
    public $time;
    public $seed;
    public $parent = -1;

    public function __constructor() {}

    public function __constructor($worldId, $name, $dimension, $generator, $difficulty, $gamemode, $spawnPoint, $time, $seed, $parent)
    {
        $this->worldId = $worldId;
        $this->name = $name;
        $this->dimension = $dimension;
        $this->generator = $generator;
        $this->difficulty = $difficulty;
        $this->gamemode = $gamemode;
        $this->spawnPoint = $spawnPoint;
        $this->time = $time;
        $this->seed = $seed;
        $this->parent = $parent;
    }

    public function getId()
    {
        return self::ID;
    }

    public function encode()
    {










    }

    public function decode()
    {}

}

